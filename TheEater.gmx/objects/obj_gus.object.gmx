<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>gus_run</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Configuration
global.start = false;

state = "idle";

image_speed = .2;

vspd = 0;
grav = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Background Control

if global.start == true
    background_hspeed[1] = -8;
    
    if state == "lose"
        background_hspeed[1] = 0;
        
// Background 2
        
if global.start == true
    background_hspeed[0] = -13;
    
    if state == "lose"
        background_hspeed[0] = 0;
        
// Background grass
        
if global.start == true
    background_hspeed[2] = -9;
    
    if state == "lose"
        background_hspeed[2] = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control

tap = (keyboard_check_pressed(vk_space) || mouse_check_button_pressed(mb_left));

// Start

    if (tap &amp;&amp; global.start == false &amp;&amp; state != "lose" &amp;&amp; state != "fall") {
        state = "jump";
        audio_play_sound(snd_jump, 10, false);
        
    }

// Jump

if (tap &amp;&amp; global.start == true &amp;&amp; state == "run") {

    state = "jump";
    
    audio_play_sound(snd_jump, 10, false);
    
}

y += vspd;

if state == "jump"
vspd = -12;

if y != ystart &amp;&amp; state != "lose" {
    state = "fall"
    vspd += grav;
}

if state == "fall" &amp;&amp; y == ystart {

    if global.start = false
        global.start = true;
        
    vspd = 0;
    state = "run";
    y = ystart;

}
// Lose


if (obj_stats.hp = .2) &amp;&amp; place_meeting(x, y, obj_cactus) {
    state = "lose"
        vsped = 0;    
    global.start = false;
   
     if !(instance_exists(obj_gameover))
        instance_create(room_width/2, room_height/2, obj_gameover);
             
}

// eating enemy

if place_meeting(x, y, obj_enemy) audio_play_sound(snd_bite, 10, false);

// meeting cactus




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sprites

if global.start == false &amp;&amp; state = "idle" {
    sprite_index = gus_idle;

}

    if state == "run" {
        image_speed = .2;
        sprite_index = gus_run;
        
    }
    else if state == "jump" {
        image_speed = .2;
        sprite_index = gus_jump;
    }
    else if global.start == false &amp;&amp; state = "lose" {
        image_speed = .2;
        sprite_index = spr_lose;     
}

//    if state == "lose" {
//    image_speed = .2;
//    sprite_index = spr_lose;
//}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
